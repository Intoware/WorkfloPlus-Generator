# Copyright Â© Intoware Limited, 2021
#
# This file is part of WorkfloPlusWorkflowGenerator.
#
# WorkfloPlusWorkflowGenerator is free software: you can redistribute
# it and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# WorkfloPlusWorkflowGenerator is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. 
# If not, see <https://www.gnu.org/licenses/>.

from datetime import datetime
import pandas as pd

import pytest

import sys
sys.path.append("/Users/timbusfield/PycharmProjects/WorkflowGenerator")

from app.models import ImportStep, StepType, DecisionPath
from app import csv_to_import_steps


example_1_df = pd.DataFrame.from_records(
    [
        ("1", "I'm an instruction step", "Step descriptions are optional",
         "", "instruction", "", "", "", "", ""),
        ("2", "I'm a text step", "", "textstep1", "text", "", "", "", "", ""),
        ("3", "I'm a numeric step", "", "", "numeric", "", "", "", "", "7890470d-2eac-4223-b711-0d9ea491894e"),
        ("4", "I'm a photo step", "This one is optional",
         "", "photo", "", "", "Optional:True", "", ""),
        ("5", "I'm a video step", "This one is optional",
         "", "video", "", "", "Optional:True", "", ""),
        ("6", "I'm a signature step", "", "", "signature", "", "", "", "", ""),
        ("7", "I'm a barcode step", "", "", "barcode", "", "", "", "", ""),
        ("8", "I'm a datetime step", "", "", "datetime", "", "", "", "", ""),
        ("9", "I'm a selection step (fixed)", "",
         "", "selection", "", "A;B;C", "", "", ""),
        ("10", "I'm a selection step (other)", "", "",
         "selection", "", "A;B;C", "Fixed:False", "", ""),
        ("11", "I'm a selection step (other and multi)", "", "",
         "selection", "", "A;B;C", "Multi:True;Fixed:False", "", ""),
        ("12", "Do you want to go back to the start?",
         "", "", "decision", "Yes:1;No:13", "", "", "", ""),
        ("13", "Group 1", "", "", "group", "", "", "", "", ""),
        ("14", "Group within Group", "", "", "group", "", "", "", "13"),
        ("15", "Foo", "", "", "instruction", "", "", "", "14"),
        ("16", "Group 2", "This one is a form",
         "", "group", "", "", "Form:True", "", ""),
        ("17", "Take a photo of the fault",
         "Take more than one if needed", "", "photo", "", "", "", "16"),
        ("18", "Please describe the fault",
         "Along with any suggested rectifications", "", "text", "", "", "", "16"),
        ("19", "Do you want to jump to the end", "(the -2 index is a special index for the terminate step)",
         "", "decision", "Yes:-2;No:20", "", "", "", ""),
        ("20", "Path direction", "Choose the left path or the right path",
         "", "decision", "Left:21;Right:22", "", "", "", ""),
        ("21", "You chose left", "", "", "instruction", ":23", "", "", "", ""),
        ("22", "You chose right", "", "", "instruction", "", "", "", "", ""),
        ("23", "The last step", "", "", "instruction", "", "", "", "", "")
    ],
    columns=[
        csv_to_import_steps.STEP_INDEX,
        csv_to_import_steps.STEP_TITLE,
        csv_to_import_steps.STEP_DESCRIPTION,
        csv_to_import_steps.STEP_TAG,
        csv_to_import_steps.STEP_TYPE,
        csv_to_import_steps.DECISION_PATHS,
        csv_to_import_steps.SELECTION_OPTIONS,
        csv_to_import_steps.CONFIG,
        csv_to_import_steps.PARENT,
        csv_to_import_steps.STEP_ID
    ]
)

example_1_expected_output = [
    ImportStep(
        step_id='',
        step_index=1,
        step_title="I'm an instruction step",
        step_description='Step descriptions are optional',
        step_tag='',
        step_type=StepType.instruction,
        decision_paths=None,
        selection_options=[''],
        steps=None,
        config={}
    ),
    ImportStep(step_id='',
               step_index=2,
               step_title="I'm a text step",
               step_description='',
               step_tag='textstep1',
               step_type=StepType.text,
               decision_paths=None,
               selection_options=[''],
               steps=None,
               config={}),
    ImportStep(step_id="7890470d-2eac-4223-b711-0d9ea491894e",
               step_index=3,
               step_title="I'm a numeric step",
               step_description='',
               step_tag='',
               step_type=StepType.numeric,
               decision_paths=None,
               selection_options=[''],
               steps=None,
               config={}),
    ImportStep(step_id='',
               step_index=4,
               step_title="I'm a photo step",
               step_description='This one is optional',
               step_tag='',
               step_type=StepType.photo,
               decision_paths=None,
               selection_options=[''],
               steps=None,
               config={'optional': 'True'}),
    ImportStep(step_id='',
               step_index=5,
               step_title="I'm a video step",
               step_description='This one is optional',
               step_tag='',
               step_type=StepType.video,
               decision_paths=None,
               selection_options=[''],
               steps=None,
               config={'optional': 'True'}),
    ImportStep(step_id='',
               step_index=6,
               step_title="I'm a signature step",
               step_description='',
               step_tag='',
               step_type=StepType.signature,
               decision_paths=None,
               selection_options=[''],
               steps=None,
               config={}),
    ImportStep(step_id='',
               step_index=7,
               step_title="I'm a barcode step",
               step_description='',
               step_tag='',
               step_type=StepType.barcode,
               decision_paths=None,
               selection_options=[''],
               steps=None,
               config={}),
    ImportStep(step_id='',
               step_index=8,
               step_title="I'm a datetime step",
               step_description='',
               step_tag='',
               step_type=StepType.datetime,
               decision_paths=None,
               selection_options=[''],
               steps=None,
               config={}),
    ImportStep(step_id='',
               step_index=9,
               step_title="I'm a selection step (fixed)",
               step_description='',
               step_tag='',
               step_type=StepType.selection,
               decision_paths=None,
               selection_options=['A',
                                  'B',
                                  'C'],
               steps=None,
               config={}),
    ImportStep(step_id='',
               step_index=10,
               step_title="I'm a selection step (other)",
               step_description='',
               step_tag='',
               step_type=StepType.selection,
               decision_paths=None,
               selection_options=['A',
                                  'B',
                                  'C'],
               steps=None,
               config={'fixed': 'False'}),
    ImportStep(step_id='',
               step_index=11,
               step_title="I'm a selection step (other and multi)",
               step_description='',
               step_tag='',
               step_type=StepType.selection,
               decision_paths=None,
               selection_options=['A',
                                  'B',
                                  'C'],
               steps=None,
               config={'multi': 'True',
                       'fixed': 'False'}),
    ImportStep(step_id='',
               step_index=12,
               step_title='Do you want to go back to the start?',
               step_description='',
               step_tag='',
               step_type=StepType.decision,
               decision_paths=[DecisionPath(step_index=1,
                                            decision_name='Yes'),
                               DecisionPath(step_index=13,
                                            decision_name='No')],
               selection_options=[''],
               steps=None,
               config={}),
    ImportStep(step_id='',
               step_index=13,
               step_title='Group 1',
               step_description='',
               step_tag='',
               step_type=StepType.group,
               decision_paths=None,
               selection_options=[''],
               steps=[ImportStep(step_id='',
                                 step_index=14,
                                 step_title='Group within Group',
                                 step_description='',
                                 step_tag='',
                                 step_type=StepType.group,
                                 decision_paths=None,
                                 selection_options=[''],
                                 steps=[ImportStep(step_id='',
                                                   step_index=15,
                                                   step_title='Foo',
                                                   step_description='',
                                                   step_tag='',
                                                   step_type=StepType.instruction,
                                                   decision_paths=None,
                                                   selection_options=[''],
                                                   steps=None,
                                                   config={})],
                                 config={})],
               config={}),
    ImportStep(step_id='',
               step_index=16,
               step_title='Group 2',
               step_description='This one is a form',
               step_tag='',
               step_type=StepType.group,
               decision_paths=None,
               selection_options=[''],
               steps=[ImportStep(step_id='',
                                 step_index=17,
                                 step_title='Take a photo of the fault',
                                 step_description='Take more than one if needed',
                                 step_tag='',
                                 step_type=StepType.photo,
                                 decision_paths=None,
                                 selection_options=[''],
                                 steps=None,
                                 config={}),
                      ImportStep(step_id='',
                                 step_index=18,
                                 step_title='Please describe the fault',
                                 step_description='Along with any suggested rectifications',
                                 step_tag='',
                                 step_type=StepType.text,
                                 decision_paths=None,
                                 selection_options=[''],
                                 steps=None,
                                 config={})],
               config={'form': 'True'}),
    ImportStep(step_id='',
               step_index=19,
               step_title='Do you want to jump to the end',
               step_description='(the -2 index is a special index for the terminate step)',
               step_tag='',
               step_type=StepType.decision,
               decision_paths=[DecisionPath(step_index=-2,
                                            decision_name='Yes'),
                               DecisionPath(step_index=20,
                                            decision_name='No')],
               selection_options=[''],
               steps=None,
               config={}),
    ImportStep(step_id='',
               step_index=20,
               step_title='Path direction',
               step_description='Choose the left path or the right path',
               step_tag='',
               step_type=StepType.decision,
               decision_paths=[DecisionPath(step_index=21,
                                            decision_name='Left'),
                               DecisionPath(step_index=22,
                                            decision_name='Right')],
               selection_options=[''],
               steps=None,
               config={}),
    ImportStep(step_id='',
               step_index=21,
               step_title='You chose left',
               step_description='',
               step_tag='',
               step_type=StepType.instruction,
               decision_paths=[DecisionPath(step_index=23,
                                            decision_name='')],
               selection_options=[''],
               steps=None,
               config={}),
    ImportStep(step_id='',
               step_index=22,
               step_title='You chose right',
               step_description='',
               step_tag='',
               step_type=StepType.instruction,
               decision_paths=None,
               selection_options=[''],
               steps=None,
               config={}),
    ImportStep(step_id='',
               step_index=23,
               step_title='The last step',
               step_description='',
               step_tag='',
               step_type=StepType.instruction,
               decision_paths=None,
               selection_options=[''],
               steps=None,
               config={})
]


def test_example_1():
    import_steps = csv_to_import_steps.convert_csv_to_import_steps(
        example_1_df
    )

    assert import_steps == example_1_expected_output
